package insertionsort;

import java.util.LinkedList;
import java.util.Scanner;

public class LinkList {
	public LinkedList<Integer> sortLinkedList(LinkedList<Integer> link){
		int temp = 0;
		
		for (int i = 0; i < link.size(); i++) {
			for (int j = 1; j < link.size(); j++) {
				if(link.get(j-1)>link.get(j)) {  // eg. 0th element > 1st element, then it will be swapped
					temp = link.get(j-1);   // swapping element storing in temp
					link.set(j-1, link.get(j));  // eg. swap the smaller element
					link.set(j, temp); // swap the bigger element, which have stored in temp
				}
			}
		}
		
		return link;
	}

	public static void main(String[] args) {
		LinkedList<Integer> link = new LinkedList<Integer>();
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the size of the linked list");
		
		int len = sc.nextInt();
		System.out.println("Enter the elemnt and press enter.");
		for (int i = 0; i < len; i++) {
			link.add(sc.nextInt());
		}
		System.out.println(link);
		LinkList linkedList = new LinkList();
		linkedList.sortLinkedList(link);
		
		System.out.println("Linked List after sorting,");
		for (int i = 0; i < len; i++) {
			System.out.println(link.get(i)+",\t");
		}
	}
}
